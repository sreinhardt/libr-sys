language: rust
sudo: required # for building radare
allow_failures: true # needed until we handle unsafe ffi

os:
  - osx
  - linux

rust:
  - stable
  - beta
  - nightly

matrix:
  include:
    - os: linux
      env: LLVM_VERSION=3.5.2 CLANG_VERSION=clang_3_5
    - os: linux
      env: LLVM_VERSION=3.6.2 CLANG_VERSION=clang_3_6
    - os: linux
      env: LLVM_VERSION=3.7.1 CLANG_VERSION=clang_3_7
    - os: linux
      env: LLVM_VERSION=3.8.0 CLANG_VERSION=clang_3_8
    - os: osx
      env: LLVM_VERSION=3.5 CLANG_VERSION=clang_3_5
    - os: osx
      env: LLVM_VERSION=3.6 CLANG_VERSION=clang_3_6
    - os: osx
      env: LLVM_VERSION=3.7 CLANG_VERSION=clang_3_7
    - os: osx
      env: LLVM_VERSION=3.8 CLANG_VERSION=clang_3_8

apt:
  sources:
    - ubuntu-toolchain-r-test
  packages:
    - gcc-5
    - git
    - clang
    - g++
    - glib-2.0
    - make
    - cmake
    - pkg-config
    - software-properties-common
    - wget
    - swig
    - flex
    - bison
    - python-all-dev
    - python-gobject-dev

before_install:
  -
    set -e;
    if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
      brew update >/dev/null;
      brew install radare2 llvm3${LLVM_VERSION#3.};
      export LLVM_CONFIG_PATH=`brew --prefix llvm3${LLVM_VERSION#3.}`/lib/llvm-${LLVM_VERSION}/bin/llvm-config;
    else
      export LLVM=clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-14.04;
      wget http://llvm.org/releases/${LLVM_VERSION}/${LLVM}.tar.xz ;
      mkdir llvm;
      tar -xf ${LLVM}.tar.xz -C llvm --strip-components=1;
      export LLVM_CONFIG_PATH=`pwd`/llvm/bin/llvm-config;
      git clone https://github.com/radare/radare2.git;
      cd radare2;
      ./sys/install.sh;
    fi

script:
  -
    set -e;
    RUST_BACKTRACE=1 cargo test --verbose --features $CLANG_VERSION;
    if [ "${CLANG_VERSION}" != "clang_3_7" ] && [ "${CLANG_VERSION}" != "clang_3_8" ] ; then
        cargo clean;
        RUST_BACKTRACE=1 cargo build --verbose --features "$CLANG_VERSION static";
    fi
